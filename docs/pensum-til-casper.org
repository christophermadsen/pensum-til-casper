* Introduktion til Programmering

Alle ressourcer er gratis eller tilbyder en stor del som er.

** HTML, CSS og JavaScript (JS)

Ved hjælp af understående ressourcer anbefaler jeg følgende læringsretning:
▶ Codecademy (Nemt, lidt kedeligt, hurtigt - kan klares på en eftermiddag)
▶▶ Khan Academy (Nemt til middel, sjovt, 1-3 dage med et afslappet tempo)
▶▶▶ Odin Project (Nemt til svært, sjovt, 20-25 timer)

*** Khan Academy
*Khan Academy* er en veletableret læringshjemmeside hvor man kan lære stort set
alt hvad man kan tænke. De tilbyder nu også en JS, HTML og CSS linje hvor man
får lov til at lege med /natural simulation/, /game & visualisation/ og
/interactive websites/. Linjen er en blanding af små videoer på 2-10 minutter,
interactiv programmerings øvelser (på Khan Academy) og længere projekter som
også bliver tjekket automatisk for korrekthed.
https://www.khanacademy.org/computing/computer-programming

*** The Odin Project
*The Odin Project* er måske den bedste moderne ressource til at komme i gang
med at blive en /full-stack javascript/ udvikler/developer. Du bliver lært alt
fra HTML, CSS, JS til specifikke JS biblioteker såsom [[https://reactjs.org/][React.js]]. De hjælper dig
med at starte fra *ingenting* og installere alting så du generelt kan arbejde
med projketer (og generelt øve dig).

Start her for at få et godt fundament og installering:
https://www.theodinproject.com/paths/foundations/courses/foundations

Næste skridt er så at gå i gang med deres full-stack javascript linje:
https://www.theodinproject.com/paths/full-stack-javascript

*** Codecademy
*Codecademy* er en af de bedste 'learn to code' hjemmesider og har en masse
sprog man kan lære og øve. Desværre er /quiz/ og /projekt/ delene ikke gratis,
men man kan få en gratis trial hvis man giver sine kreditkort info.

Det er en god måde at øve rent syntax og få en ide om hvordan et
programmeringssprog fungere.

OBS: Man kan altid cancel ens abonnement, MEN abonnementet STOPPER i samme
øjeblik, så hvis du vil have deres free trial, så sæt en timer til den 6. dag
før de begynder at trække penge (eller betal for en enkelt måned).

Intro JS: https://www.codecademy.com/learn/introduction-to-javascript
Intermediate JS: https://www.codecademy.com/learn/learn-intermediate-javascript

** Stil Spørgsmål og Find Svar

En ting som man aldrig vokser fra som software developer er at stille
spørgsmål. Der er utallige arbejdsgrene af software development - frontend
developer, backend developer, fullstack developer system engineer, data
engineer, data scientist. Hver gren har så også deres egne teknologier og
/frameworks/, for eksempel er det muligt at du kommer til at arbejde med
/React.js/, /JQuery/ eller /Vue.js/ hvis du bruger JavaScript, eller /Angular/
hvis du bruger JavaScript afarten /TypeScript/ eller måske endda en helt tredje
afart /Elm/. Det er umuligt at kunne vide *alt* om alle de sprog og frameworks,
og hvad der er vigtigt I hvilken arbejdsgren. Hver derfor ikke bange for a
stille 'dumme spørgsmål' for der er nemlig seriøst ikke nogle dumme spørgsmål.

Her er nogle forslag til hvad man kan bruge når man leder efter et svar.

+ *Google* er seriøst din bedste ven og det er sjældent at man ikke kan finde
  svar på problemer man støder på. I starten kan det være svært at stille de
  rigtige spørgsmål, men man lærer det forholdsvist hurtigt.

+ *Stackoverflow* er en hjemmeside ALLE developers bruger til at finde svar og
  still spørgsmål (ofte leder google svar til stackoverflow):
  https://stackoverflow.com/questions

+ *Youtube* har ret ofte video tutorials, lavet a passionerede folk, til når du
  leder efter en specifik teknologi eller metode. Vær ikke bange for at
  udforske Indiske videoer med lav kvalitet, for de har ofte svarene du leder
  after.

+ *w3schools* er en hjemmeside som også tilbyder programmeringssprog og
  framework 'tutorials', men er lidt mere tørt end meget andet. Til gengæld så
  kan hjemmesiden bruges som en ret god opslagsbog, også til specifikke ting
  some forskellige JavaScript frameworks (JQuery, React).

  + HTLM: https://www.w3schools.com/html/default.asp
  + CSS: https://www.w3schools.com/css/default.asp
  + JavaScript: https://www.w3schools.com/js/default.asp
    - JQuery https://www.w3schools.com/jquery/default.asp
    - React https://www.w3schools.com/react/default.asp

+ *Reddit* har et ret omfattende subreddit /learnprogramming/ hvor man kan
  stille spørgsmål, de har også en guide til hvordan man kommer i gang med at
  programmere.

  Guide til at starte:
  https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_getting_started

  README til deres subreddit:
  https://www.reddit.com/r/learnprogramming/comments/61oly8/new_read_me_first/

** Foreslag til Editors eller IDEs

Når man skrive kode kan man i princippet gøre det med hvilken som helst text
editor (Ja, endda også windows notepad), men der er utallige editors som
tilbyder fine værktøjer til at forbedre din oplevelse.

Et integrated development environment (IDE) er typisk en editor som er
dedikeret til et specifikt programmeringssprog og understøtter koncepter såsom
udvidet debugging, auto-completion, linting, testing og/eller integreret
konsol.

De fleste moderne editors understøtter plugins som man kan bruge til at
modificere og tilpasse editoren til hvad man har lyst til med forskellige
komponenter. For eksempel kan man ændre udseende og temaet, eller bruge
specifikke plugins som imiterer IDEs.

Til at starte med, vil jeg foreslå at du bruger /Visual Studio Code/ eller
/Atom/. Du behøver ikke vælge en og kan altid skifte til en anden. Det hele
handler om præference og når du har noget mere erfaring kan du altid udforske
flere valg.

+ Visual Studio Code (VSCode): https://code.visualstudio.com/
+ Atom: https://atom.io/

Med hensyn til IDEs, så koster de ofte penge. Python har nogle gode gratis
IDEs, men JavaScript IDEs koster ofte noget lignende 5€ om måneden. En populær
IDE til JavaScript of dens afarter er /Webstorm/ bygget af JetBrains.

+ https://www.jetbrains.com/webstorm/

** Udvidet Foreslag til Bøger
Det er ikke på sin vis nødvendigt at køber bøger da næsten alt materiale er
ledigt online, men der er visse bøger som er det værd.

*** Grokking Algorithms
/Grokking Algorithms: An Illustrated Guide for Programmers and Other Curious
People/ er en bog som illustrerer og gør algoritmer og data strukture lettere
at forstå på en sjovere måde en de fleste forfattere kan. Det er en interessant
bog selv hvis man ikke er interesseret i at lære programmering.

Et dansk link:
https://www.saxo.com/dk/grokking-algorithms_aditya-bhargava_paperback_9781617292231

* BONUS: Humor
https://www.reddit.com/r/ProgrammerHumor
https://xkcd.com/
